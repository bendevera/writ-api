{"version":3,"sources":["history.js","components/Navbar/Navbar.js","components/Home/Home.js","components/Register/Register.js","components/Login/Login.js","components/WorkList/WorkList.js","components/Work/Work.js","config.js","util.js","components/App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","Navbar","props","auth","className","to","onClick","signalLogout","Home","Register","handleChange","e","value","target","setState","state","name","handleSubmit","preventDefault","sendRegister","email","password","errorMessage","this","error","onChange","type","React","Component","Login","sendLogin","WorkList","handleClick","focusWork","getAttribute","fetchData","addWork","scope","data","map","item","index","console","log","key","id","title","created","last_updated","newest_version","Work","newVersions","versions","number","currNum","text","unsavedChanges","handleTextsChange","newTexts","texts","currNums","one","two","colorCodes","diffChars","versionChange","currValue","mode","newNums","handleSave","dataOne","workId","sendSave","dataTwo","handleNew","createVersion","handleDelete","length","alert","removeVersion","spliceNum","i","splice","changeMode","newMode","nextProps","history","push","modeButtons","style","color","Config","apiURL","getAuthToken","localStorage","getItem","getAuthQueryString","App","handleLogin","Promise","resolve","reject","fetch","method","headers","body","JSON","stringify","then","response","json","responseJson","setItem","catch","loginAction","result","authenticated","handleLogout","removeItem","handleRegister","registerAction","getMyWorks","works","createWork","token","newWorks","focusOnWork","currWorkId","currTitle","currText","currVersions","toString","saveVersion","versionNum","makeVersion","deleteVersion","temp_version_data","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.081f16d0.chunk.js","sourcesContent":["// history.js\nimport { createBrowserHistory } from 'history'\n\nexport default createBrowserHistory({\n  /* pass a configuration object here if needed */\n})","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst Navbar = (props) => {\n    if (props.auth) {\n        return (\n            <nav className=\"navbar navbar-light bg-light justify-content-between\">\n                <Link to=\"/\"><span className=\"navbar-brand mb-0 h1\"><i className=\"fas fa-code-branch\"></i> writ</span></Link>\n                <div className=\"row\">\n                    <Link to=\"/works\"><span className=\"nav-link\">Works</span></Link>\n                    <span className=\"nav-link\" onClick={props.signalLogout}>Logout</span>\n                </div>\n            </nav>\n        )\n    }\n    return (\n        <nav className=\"navbar navbar-light bg-light justify-content-between\">\n            <Link to=\"/\"><span className=\"navbar-brand mb-0 h1\"><i className=\"fas fa-code-branch\"></i> writ</span></Link>\n            <div className=\"row\">\n                <Link to=\"/login\"><span className=\"nav-link\">Login</span></Link>\n                <Link to=\"/register\"><span className=\"nav-link\">Register</span></Link>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst Home = (props) => {\n    return (\n        <div className=\"fluid-container\">\n            <div className=\"jumbotron my-jumbo\">\n                <h1 className=\"display-4\">Welcome to writ.</h1>\n                <p className=\"lead\">We're a version control system for literary works.</p>\n                <hr className=\"my-4\" />\n                <p>Sign up, and get to writing freely and cleanly.</p>\n                <Link className=\"btn btn-outline-dark btn-lg\" to=\"/register\">Register</Link>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Home;","import React from 'react';\n\n\nclass Register extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        this.setState({\n            ...this.state,\n            [e.target.name]: value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.sendRegister(this.state.email, this.state.password);\n    }\n\n    render() {\n        var errorMessage\n        if (this.props.error) {\n            errorMessage = (\n                <div className=\"alert alert-danger\">\n                    {this.props.error}\n                </div>\n            );\n        } else {\n            errorMessage = (\n                <div></div>\n            );\n        }\n        return (\n            <div className=\"container my-2\">\n                <h2>Register an account.</h2>\n                <form>\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input name=\"email\" onChange={this.handleChange} type=\"email\" className=\"form-control\" />\n                        <small className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input name=\"password\" onChange={this.handleChange} type=\"password\" className=\"form-control\" />\n                    </div>\n                    {errorMessage}\n                    <button className=\"btn btn-outline-dark\" onClick={this.handleSubmit}>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default Register;","import React from 'react';\n\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            email: \"\",\n            password: \"\"\n        }\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        this.setState({\n            ...this.state,\n            [e.target.name]: value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.sendLogin(this.state.email, this.state.password);\n    }\n\n    render() {\n        var errorMessage;\n        if (this.props.error) {\n            errorMessage = (\n                <div className=\"alert alert-danger\">\n                    {this.props.error}\n                </div>\n            );\n        } else {\n            errorMessage = (\n                <div></div>\n            );\n        }\n        return (\n            <div className=\"container my-2\">\n                <h2>Login to your account.</h2>\n                <form>\n                    <div className=\"form-group\">\n                        <label>Email address</label>\n                        <input name=\"email\" onChange={this.handleChange} type=\"email\" className=\"form-control\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input name=\"password\" onChange={this.handleChange} type=\"password\" className=\"form-control\" />\n                    </div>\n                    {errorMessage}\n                    <button className=\"btn btn-outline-dark\" onClick={this.handleSubmit}>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\n\nexport default Login;","import React from 'react';\n\n\nclass WorkList extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchData()\n    }\n\n    handleClick = (e) => {\n        this.props.focusWork(e.target.getAttribute(\"value\"))\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row justify-content-between my-3 px-3\">\n                    <h2><i className=\"fas fa-sticky-note\"></i> My Works.</h2>\n                    <i className=\"fas fa-plus fa-2x add-work\" onClick={this.props.addWork}></i>\n                </div>\n                <table className=\"table table-hover\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                        <th scope=\"col\">Name</th>\n                        <th scope=\"col\">Created</th>\n                        <th scope=\"col\">Last Updated</th>\n                        <th scope=\"col\"># Versions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.data.map((item, index) => {\n                        console.log(index, item)\n                        return (\n                            <tr className=\"my-table-elem\" key={item.id} onClick={this.handleClick}>\n                                <th value={item.id}>{item.title}</th>\n                                <td value={item.id}>{item.created}</td>\n                                <td value={item.id}>{item.last_updated}</td>\n                                <td value={item.id}>{item.newest_version}</td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n} \n\n\nexport default WorkList;","import React from 'react';\nimport history from '../../history';\nimport { diffChars } from 'diff';\nimport './Work.css';\n\n\nclass Work extends React.Component {\n    constructor(props) {\n        super(props)\n        console.log(this.props.data)\n        this.state = {\n            title: this.props.title,\n            versions: this.props.versions,\n            workId: this.props.workId,\n            mode: 'Single',\n            text: this.props.text,\n            currNum: this.props.currNum,\n            texts: {\n                one: this.props.texts.one,\n                two: this.props.texts.two\n            },\n            currNums: {\n                one: this.props.currNums.one,\n                two: this.props.currNums.two\n            }\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        console.log(\"Receiving props\")\n        console.log(nextProps)\n        if (nextProps.text != this.props.text || nextProps.versions.length > this.props.versions.length) {\n            console.log(\"Setting...\")\n            // var newVersions = nextProps.versions \n            // newVersions.map((item) => {\n            //     if (item.number == nextProps.)\n            // })\n            this.setState({\n                workId: nextProps.workId,\n                title: nextProps.title,\n                text: nextProps.text,\n                currNum: nextProps.currNum,\n                versions: nextProps.versions\n            })\n        }\n        if (nextProps.workId == null) {\n            console.log(\"HAVE NULL workID\")\n            history.push('/works')\n        }\n    }\n\n    handleChange = (e) => {\n        const value = e.target.value;\n        if (e.target.name == \"text\") {\n            let newVersions = this.state.versions\n            this.state.versions.map((item, index) => {\n                if (item.number == this.state.currNum) {\n                    newVersions[index].text = value\n                    newVersions[index].unsavedChanges = true\n                }\n            })\n            this.setState({\n                ...this.state,\n                [e.target.name]: value,\n                versions: newVersions\n            })\n        } else {\n            this.setState({\n                ...this.state,\n                [e.target.name]: value\n            })\n        }\n    }\n\n    handleTextsChange = (e) => {\n        const value = e.target.value;\n        let newTexts = this.state.texts;\n        let newVersions = this.state.versions\n        if (e.target.name == \"text-one\") {\n            this.state.versions.map((item, index) => {\n                if (item.number == this.state.currNums.one) {\n                    newVersions[index].text = value\n                    newVersions[index].unsavedChanges = true\n                }\n            })\n            newTexts.one = value;\n        } else {\n            this.state.versions.map((item, index) => {\n                if (item.number == this.state.currNums.two) {\n                    newVersions[index].text = value\n                    newVersions[index].unsavedChanges = true\n                }\n            })\n            newTexts.two = value;\n        }\n        let colorCodes = diffChars(newTexts.one, newTexts.two)\n        console.log(\"DIFF CHARS\")\n        console.log(colorCodes)\n        this.setState({\n            texts: newTexts,\n            versions: newVersions\n        })\n    }\n\n    versionChange = (e) => {\n        var currValue = e.target.getAttribute(\"value\");\n        this.state.versions.map((item) => {\n            if (item.number == currValue) {\n                console.log(item.text)\n                if (this.state.mode === 'Comparison') {\n                    let newNums = this.state.currNums \n                    newNums.two = newNums.one \n                    newNums.one = item.number \n                    let newTexts = this.state.texts \n                    newTexts.two = newTexts.one \n                    newTexts.one = item.text \n                    this.setState({\n                        currNums: newNums,\n                        texts: newTexts\n                    })\n                } else {\n                    this.setState({\n                        currNum: item.number,\n                        text: item.text\n                    })\n                }\n            }\n        })\n    }\n\n    handleSave = (e) => {\n        let newVersions = this.state.versions\n        if (this.state.mode === 'Comparison') {\n            const dataOne = {\n                workId: this.state.workId,\n                title: this.state.title,\n                text: this.state.texts.one,\n                number: this.state.currNums.one\n            }\n            this.props.sendSave(dataOne)\n            const dataTwo = {\n                workId: this.state.workId,\n                title: this.state.title,\n                text: this.state.texts.two,\n                number: this.state.currNums.two\n            }\n            this.props.sendSave(dataTwo)\n            this.state.versions.map((item, index) => {\n                if (item.number == this.state.currNums.one || item.number == this.state.currNums.two) {\n                    newVersions[index].unsavedChanges = false\n                }\n            })\n            this.setState({\n                versions: newVersions\n            })\n        } else {\n            const data = {\n                workId: this.state.workId,\n                title: this.state.title,\n                text: this.state.text,\n                number: this.state.currNum\n            }\n            this.props.sendSave(data)\n            this.state.versions.map((item, index) => {\n                if (item.number == this.state.currNum) {\n                    newVersions[index].unsavedChanges = false\n                }\n            })\n            this.setState({\n                versions: newVersions\n            })\n        }\n    }\n\n    handleNew = (e) => {\n        this.props.createVersion(this.state.workId, this.state.currNum)\n    }\n\n    handleDelete = (e) => {\n        if (this.state.versions.length == 1) {\n            alert(\"Can't delete the last version of a Work.\")\n        } else {\n            this.props.removeVersion(this.state.workId, this.state.currNum)\n            var newVersions = this.state.versions\n            var spliceNum = 0\n            for (var i=0;i<newVersions.length;i++) {\n                if (newVersions[i].number == this.state.currNum) {\n                    spliceNum = i\n                } else {\n                    if (newVersions[i].number > this.state.currNum) {\n                        newVersions[i].number = newVersions[i].number - 1\n                    }\n                }\n            }\n            newVersions.splice(spliceNum, 1)\n            this.setState({\n                versions: newVersions,\n                text: newVersions[0].text,\n                currNum: newVersions[0].number\n            })\n        }\n    }\n\n    changeMode = (e) => {\n        const newMode = this.state.mode === 'Single' ? 'Comparison' : 'Single';\n        if (newMode === 'Comparison') {\n            let newTexts = {}\n            this.state.versions.map(item => {\n                if (item.number == this.state.currNums.one) {\n                    newTexts.one = item.text\n                } else if (item.number == this.state.currNums.two) {\n                    newTexts.two = item.text\n                }\n            })\n            this.setState({\n                mode: newMode,\n                texts: newTexts\n            })\n        } else {\n            this.setState({\n                mode: newMode\n            })\n        }\n    }\n\n    render() {\n        var modeButtons;\n        if (this.state.mode == 'Single') {\n            if (this.state.versions.length > 1) {\n                modeButtons = (\n                    <div className=\"btn-group\">\n                        <button className=\"btn btn-dark active\">Single</button>\n                        <button className=\"btn btn-light\" onClick={this.changeMode}>Comparison</button>\n                    </div>\n                )\n            } else {\n                modeButtons = (\n                    <div className=\"btn-group\">\n                        <button className=\"btn btn-dark active\">Single</button>\n                        <button className=\"btn btn-light disabled\">Comparison</button>\n                    </div>\n                )\n            }\n            return (\n                <div className=\"container my-2\">\n                    <div className=\"btn-toolbar justify-content-between\">\n                        {modeButtons}\n                        <div className=\"btn-group\">\n                            {this.state.versions.map((item) => {\n                                if (item.number == this.state.currNum) {\n                                    if (item.unsavedChanges) {\n                                        return (\n                                            <button \n                                                className=\"btn btn-light\" \n                                                key={item.number} \n                                                value={item.number}\n                                                onClick={this.versionChange}>V{item.number} <span style={{color: \"Tomato\"}}><i className=\"fas fa-dot-circle\"></i></span>  <span value={item.number} className=\"badge badge-secondary font-italic\">edited</span>\n                                                </button>\n                                        )\n                                    }\n                                    return (\n                                        <button \n                                            className=\"btn btn-light\" \n                                            key={item.number} \n                                            value={item.number}\n                                            onClick={this.versionChange}>V{item.number} <span style={{color: \"Tomato\"}}><i className=\"fas fa-dot-circle\"></i></span></button>\n                                    )\n                                }\n                                if (item.unsavedChanges) {\n                                    return (\n                                        <button \n                                            className=\"btn btn-dark\" \n                                            key={item.number} \n                                            value={item.number}\n                                            onClick={this.versionChange}>V{item.number} <span value={item.number} className=\"badge badge-secondary font-italic\">edited</span></button>\n                                    )\n                                }\n                                return (\n                                    <button \n                                        className=\"btn btn-dark\" \n                                        key={item.number} \n                                        value={item.number}\n                                        onClick={this.versionChange}>V{item.number}</button>\n                                )\n                            })}\n                        </div>\n                        <div className=\"btn-group\">\n                            <button className=\"btn\" onClick={this.handleDelete}><i className=\"fas fa-trash-alt\"></i></button>\n                            <button className=\"btn\" onClick={this.handleSave}><i className=\"fas fa-save\"></i></button>\n                            <button className=\"btn\" onClick={this.handleNew}><i className=\"fas fa-copy\"></i></button>\n                        </div>\n                    </div>\n                    <input \n                        name=\"title\" \n                        value={this.state.title} \n                        className=\"version-title\" \n                        onChange={this.handleChange} />\n                    <textarea \n                        name=\"text\" \n                        className=\"version-text bg-light\" \n                        value={this.state.text}\n                        onChange={this.handleChange}></textarea>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"container my-2\">\n                    <div className=\"btn-toolbar justify-content-between\">\n                        <div className=\"btn-group\">\n                            <button className=\"btn btn-light\" onClick={this.changeMode}>Single</button>\n                            <button className=\"btn btn-dark active\">Comparison</button>\n                        </div>\n                        <div className=\"btn-group\">\n                            {this.state.versions.map((item) => {\n                                if (item.number == this.state.currNums.one || item.number == this.state.currNums.two) {\n                                    if (item.unsavedChanges) {\n                                        return (\n                                            <button \n                                                className=\"btn btn-light\" \n                                                key={item.number} \n                                                value={item.number}\n                                                onClick={this.versionChange}>V{item.number} <span style={{color: \"Tomato\"}}><i className=\"fas fa-dot-circle\"></i></span>  <span value={item.number} className=\"badge badge-secondary font-italic\">edited</span>\n                                                </button>\n                                        )\n                                    }\n                                    return (\n                                        <button \n                                            className=\"btn btn-light\" \n                                            key={item.number} \n                                            value={item.number}\n                                            onClick={this.versionChange}>V{item.number} <span style={{color: \"Tomato\"}}><i className=\"fas fa-dot-circle\"></i></span></button>\n                                    )\n                                }\n                                if (item.unsavedChanges) {\n                                    return (\n                                        <button \n                                            className=\"btn btn-dark\" \n                                            key={item.number} \n                                            value={item.number}\n                                            onClick={this.versionChange}>V{item.number} <span value={item.number} className=\"badge badge-secondary font-italic\">edited</span></button>\n                                    )\n                                }\n                                return (\n                                    <button \n                                        className=\"btn btn-dark\" \n                                        key={item.number} \n                                        value={item.number}\n                                        onClick={this.versionChange}>V{item.number}</button>\n                                )\n                            })}\n                        </div>\n                        <div className=\"btn-group\">\n                            <button className=\"btn\" onClick={this.handleSave}><i className=\"fas fa-save\"></i></button>\n                        </div>\n                    </div>\n                    <input \n                        name=\"title\" \n                        value={this.state.title} \n                        className=\"version-title\" \n                        onChange={this.handleChange} />\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <textarea \n                            name=\"text-one\" \n                            className=\"version-text bg-light\" \n                            value={this.state.texts.one}\n                            onChange={this.handleTextsChange}></textarea>\n                        </div>\n                        <div className=\"col\">\n                            <textarea \n                            name=\"text-two\" \n                            className=\"version-text bg-light\" \n                            value={this.state.texts.two}\n                            onChange={this.handleTextsChange}></textarea>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\n\nexport default Work;","const Config = {\n    apiURL: \"https://writ-api.herokuapp.com\"\n}\n\n// const Config = {\n//     apiURL: \"http://localhost:5000\"\n// }\n\nexport default Config;","import Config from './config.js';\n\n\nfunction getAuthToken() {\n    return localStorage.getItem('writToken');\n}\n\nfunction getAuthQueryString() {\n    return \"?token=\" + getAuthToken()\n}\n\n\nexport const loginAction = function(email, password){\n    return new Promise((resolve, reject) => {\n        fetch(Config.apiURL+ \"/auth/login\", {\n            method: 'POST',\n            headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: email, password: password})\n        })\n        .then(response => response.json())\n        .then(responseJson => {\n            console.log(responseJson)\n            if (responseJson['status'] == 'success') {\n                localStorage.setItem('writToken', responseJson['auth_token']);\n                resolve(\"Logged in.\");\n            }\n            reject(responseJson['message']);\n            // localStorage.setItem('itemName', value)\n            // localStorage.getItem('itemName')\n        })\n        .catch((error) => {\n            console.log(error)\n            reject(\"Error with request. Please try again.\")\n        })\n    })\n}\n\nexport const logoutAction = function(){\n    localStorage.removeItem(\"writToken\")\n    return true\n}\n\nexport const registerAction = function(email, password){\n    return new Promise((resolve, reject) => {\n        fetch(Config.apiURL+ \"/auth/register\", {\n            method: 'POST',\n            headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({email: email, password: password})\n        })\n        .then(response => response.json())\n        .then(responseJson => {\n            if (responseJson['status'] == 'success') {\n                localStorage.setItem('writToken', responseJson['auth_token']);\n                resolve(\"Logged in.\");\n            }\n            reject(responseJson['message']);\n        })\n        .catch((error) => {\n            console.log(error)\n            reject(\"Error with request. Please try again.\")\n        })\n    })\n}\n\nexport const checkAuth = function(){\n    return new Promise((resolve, reject) => {\n        fetch(Config.apiURL+ \"/auth/status\"+getAuthQueryString())\n        .then(response => response.json())\n        .then(responseJson => {\n            if (responseJson['status'] == 'success') {\n                resolve(true)\n            } else {\n                resolve(false)\n            }\n            \n        })\n        .catch((error) => {\n            reject(error)\n        })\n    })\n}\n\n\nexport const getWorks = function(){\n    return new Promise((resolve, reject) => {\n        fetch(Config.apiURL+ \"/works\"+getAuthQueryString())\n        .then(response => response.json())\n        .then(responseJson => {\n            if (responseJson['status'] == 'success') {\n                resolve(responseJson.data)\n            } else {\n                reject(responseJson['message'])\n            }\n            \n        })\n    })\n}\n\n\nexport const makeWork = function(){\n    return new Promise((resolve, reject) => {\n        fetch(Config.apiURL + \"/works\"+getAuthQueryString(), {\n            method: 'POST',\n            headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                token: getAuthToken()\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolve(responseJson['data'])\n        })\n        .catch((error) => {\n            reject(error)\n        })\n    })\n}\n\nexport const makeVersion = function(workId, versionNum){\n    return new Promise((resolve, reject) => {\n        console.log(Config.apiURL + \"/works/\"+workId.toString()+getAuthQueryString())\n        fetch(Config.apiURL + \"/works/\"+workId.toString()+\"/versions\"+getAuthQueryString(), {\n            method: 'POST',\n            headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                number: versionNum\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolve(responseJson['data'])\n        })\n        .catch((error) => {\n            reject(error)\n        })\n    })\n}\n\nexport const saveVersion = function(data){\n    return new Promise((resolve, reject) => {\n        fetch(Config.apiURL + \"/works/\"+data.workId.toString()+\"/versions/\"+data.number.toString()+getAuthQueryString(), {\n            method: 'POST',\n            headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                title: data.title,\n                text: data.text\n            })\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolve(responseJson['data'])\n        })\n        .catch((error) => {\n            reject(error)\n        })\n    })\n}\n\nexport const deleteVersion = function(workId, number){\n    return new Promise((resolve, reject) => {\n        fetch(Config.apiURL + \"/works/\"+workId.toString()+\"/versions/\"+number.toString()+getAuthQueryString(), {\n            method: 'DELETE'\n        })\n        .then((response) => response.json())\n        .then((responseJson) => {\n            resolve(responseJson['data'])\n        })\n        .catch((error) => {\n            reject(error)\n        })\n    })\n}","import React from 'react';\nimport { Router } from \"react-router\";\nimport { Route } from 'react-router-dom';\nimport history from '../history';\nimport Navbar from './Navbar/Navbar';\nimport Home from './Home/Home';\nimport Register from './Register/Register';\nimport Login from './Login/Login';\nimport WorkList from './WorkList/WorkList';\nimport Work from './Work/Work';\nimport { \n  loginAction, \n  logoutAction, \n  registerAction, \n  getWorks,\n  makeWork,\n  checkAuth,\n  saveVersion,\n  makeVersion,\n  deleteVersion\n} from '../util';\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      authenticated: false,\n      works: [],\n      error: null,\n      temp_version_data: {\n        title: \"Untitled\",\n        text: \"This is a test\"\n      },\n      currWorkId: null,\n      currTitle: '',\n      currText: '',\n      currVersions: [],\n      currNum: 1,\n      texts: {\n          one: '',\n          two: ''\n      },\n      currNums: {\n          one: 1,\n          two: 2\n      }\n    }\n\n  }\n\n  componentDidMount() {\n    checkAuth()\n    .then((result) => {\n      console.log(\"RESULT\")\n      console.log(result)\n      if (result) {\n        this.setState({\n          authenticated: true\n        })\n      }\n    })\n    .catch((error) => {\n      console.log(\"ERROR CEHCK\")\n      console.log(error)\n    })\n  }\n\n  handleLogin = (email, password) => {\n    loginAction(email, password)\n      .then((result) => {\n        console.log(\"Should push /works\")\n        history.push('/works')\n        this.setState({\n          authenticated: true\n        })\n      })\n      .catch((error) => {\n        console.log(error)\n        this.setState({\n          error: error\n        })\n      })\n  }\n\n  handleLogout = () => {\n    logoutAction()\n    this.setState({\n      authenticated: false\n    })\n    history.push('/login')\n  }\n\n  handleRegister = (email, password) => {\n    registerAction(email, password)\n      .then((result) => {\n        console.log(\"Should push /works\")\n        history.push('/works')\n        // isn't working for some reason maybe need to bind this\n        this.setState({\n          authenticated: true\n        })\n      })\n      .catch((error) => {\n        console.log(error)\n        this.setState({\n          error: error\n        })\n      })\n  }\n\n  getMyWorks = () => {\n    getWorks()\n      .then((data) => {\n        this.setState({\n          works: data,\n          authenticated: true\n        })\n      })\n      .catch((error) => {\n        console.log(\"ERROR\")\n      })\n  }\n\n  createWork = () => {\n    makeWork()\n      .then((data) => {\n        const newWorks = this.state.works \n        newWorks.push(data)\n        this.setState({\n          works: newWorks\n        })\n      })\n      .catch((error) => {\n        console.log(\"ERROR MAKING WORK\")\n      })\n  }\n\n  focusOnWork = (id) => {\n    this.state.works.map((item) => {\n      if (item.id == id) {\n        this.setState({\n          currWorkId: item.id,\n          currTitle: item.title,\n          currText: item.versions[0].text,\n          currNum: item.versions[0].number,\n          currVersions: item.versions\n        })\n        history.push('/version') \n      }\n    })\n  }\n\n  sendSave = (data) => {\n    saveVersion(data)\n      .then((result) => {\n        console.log(\"RESULT OF SAVE\")\n        console.log(result)\n      })\n  }\n\n  createVersion = (workId, versionNum) => {\n    makeVersion(workId, versionNum)\n      .then((result) => {\n        console.log(result)\n        this.setState({\n          currNum: result.number,\n          currText: result.text,\n          currVersions: [...this.state.currVersions, result]\n        })\n      })\n  }\n\n  removeVersion = (workId, number) => {\n    deleteVersion(workId, number)\n      .then((result) => {\n        console.log(\"DELETED\")\n        console.log(result)\n      })\n      .catch((error) => {\n        console.log(\"ERROR DELETING\")\n      })\n  }\n\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <Navbar auth={this.state.authenticated} signalLogout={this.handleLogout} />\n          <Route exact path=\"/\" component={Home} />\n          <Route \n            path=\"/register\" \n            render={(props) => <Register {...props} sendRegister={this.handleRegister} error={this.state.error} /> }\n          />\n          <Route \n            path=\"/login\" \n            render={(props) => <Login {...props} sendLogin={this.handleLogin} error={this.state.error} />} \n          />\n          <Route \n            path=\"/works\" \n            render={(props) => <WorkList \n                                  {...props} \n                                  data={this.state.works} \n                                  fetchData={this.getMyWorks}\n                                  addWork={this.createWork} \n                                  focusWork={this.focusOnWork} />} \n          /> \n          <Route \n            path=\"/version\"\n            render={(props) => <Work\n                                  {...props}\n                                  workId={this.state.currWorkId}\n                                  title={this.state.currTitle}\n                                  text={this.state.currText}\n                                  currNum={this.state.currNum}\n                                  versions={this.state.currVersions}\n                                  sendSave={this.sendSave}\n                                  createVersion={this.createVersion} \n                                  removeVersion={this.removeVersion}\n                                  texts={this.state.texts}\n                                  currNums={this.state.currNums}/>}\n          />\n        </div>\n      </Router>\n    )\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}